// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
  name String
  imageUrl String
  email String
  servers Server[]
  members Member[]
  channels Channel[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  imageUrl String
  inviteCode String @unique
  members Member[]
  channels Channel[]
  profileId String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([profileId])
}

enum MemberRole{
  ADMIN
  MODERATOR
  GUEST
}
model Member{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  role MemberRole @default(GUEST)

  messages Message[]
  
  profileId String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete:Cascade)
  serverId String @db.ObjectId
  server Server @relation(fields: [serverId], references: [id], onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([profileId])
  @@index([serverId])
}

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}
model Channel{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  type ChannelType @default(TEXT)

  profileId String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String @db.ObjectId
  server Server @relation(fields: [serverId], references: [id], onDelete:Cascade)

  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([serverId])
  @@index([profileId])
}

model Message{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  fileUrl String
  
  memberId String @db.ObjectId
  member Member @relation(fields: [memberId], references: [id], onDelete:Cascade)
  channelId String @db.ObjectId
  channel Channel @relation(fields: [channelId], references: [id], onDelete:Cascade)

  deleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([channelId])
  @@index([memberId])
}
